{"version":3,"sources":["Components/Form/Form.js","Components/Todo/Todo.js","Components/TodoList/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","setInputText","e","setState","currentInput","target","value","setCurrentInput","state","submitCurrentInput","newList","currentList","text","id","Date","now","completed","setCurrentList","filterList","setStatus","className","type","autoComplete","name","onChange","this","onClick","React","Component","Todo","deleteCurrentItem","elementRemovedList","filter","el","currentItem","handleCurrentList","completedList","map","item","done_class","index","TodoList","filteredList","App","useState","status","setFilteredList","useEffect","getList","filterHandler","saveList","localStorage","setItem","JSON","stringify","getItem","curList","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dff55e29.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// export default class Form extends React.component {\r\n\r\nexport default class Form extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentInput: '',\r\n      currentList: []\r\n    }\r\n    // this.setInputText = this.setInputText.bind (this);\r\n  }\r\n  /*setInputText(e){\r\n    this.setState ({currentInput: e.target.value});\r\n      console.log(this.state.currentInput)\r\n  }*/\r\n  setInputText = (e) => {\r\n    this.setState ({currentInput: e.target.value});\r\n    this.props.setCurrentInput(this.state.currentInput)\r\n  }\r\n\r\n  submitCurrentInput = (e) => {\r\n    // console.log(this.state.currentList)\r\n    let newList = [...this.props.currentList, {text:this.state.currentInput, id:Date. now(), completed:false}]\r\n    this.props.setCurrentList(newList);\r\n    this.props.setCurrentInput('')\r\n    this.setState ({currentInput: ''});\r\n  }\r\n\r\n  filterList = (e) => {\r\n\r\n    this.props.setStatus(e.target.value)\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"d-flex\">\r\n        <input\r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n        name=\"to_do_name\"\r\n        onChange={this.setInputText}\r\n        value={this.state.currentInput}\r\n        className=\"todo_input\"\r\n        />\r\n        {/*<input type=\"submit\" value=\"add\"/>*/}\r\n        <button type=\"submit\"  onClick={this.submitCurrentInput} className=\"addButton\"><i className=\"fas fa-plus\"></i></button>\r\n        <select name=\"current_status\" onChange={this.filterList} className=\"currentStatus_selector\">\r\n          <option>All</option>\r\n          <option>Completed</option>\r\n          <option>Not Completed</option>\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class Todo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  deleteCurrentItem = (e) => {\r\n    let elementRemovedList = this.props.currentList.filter ( (el) => el.id !== this.props.currentItem.id );\r\n    this.props.setCurrentList(elementRemovedList);\r\n  }\r\n\r\n  handleCurrentList = (e) => {\r\n    let completedList = this.props.currentList.map( item => {\r\n      if(item.id === this.props.currentItem.id){\r\n        return {\r\n          ...item, completed: !item.completed\r\n        }\r\n      }\r\n      return item;\r\n    })\r\n    // console.log(completedList);\r\n    this.props.setCurrentList(completedList);\r\n  }\r\n\r\n  render(){\r\n    // console.log(this.props.currentItem)\r\n    let done_class = this.props.currentItem.completed ? 'done_class' : '';\r\n    return (\r\n        <li key={this.props.currentItem.id} className={done_class}>\r\n        <span >{this.props.index+1+'. '+this.props.currentItem.text}</span>\r\n        <button onClick={this.deleteCurrentItem}><i className=\"fas fa-times\"></i></button>\r\n        <button onClick={this.handleCurrentList} className=\"completed_todo\"><i className=\"fas fa-check\"></i></button>\r\n        </li>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Todo from './../../Components/Todo/Todo'\r\n\r\nexport default class TodoList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render(){\r\n\r\n    // {this.props.currentList.map(el =>\r\n\r\n    return (\r\n      <>\r\n      <h3>To Do List</h3>\r\n      <ul className=\"list_style\">\r\n      {this.props.filteredList.map((el, index) =>\r\n        <Todo currentItem={el} key={el.id}\r\n        currentList={this.props.currentList}\r\n        setCurrentList={this.props.setCurrentList}\r\n        currentItem={el}\r\n        index={index}/>\r\n      )}\r\n      </ul>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import './App.css';\nimport Form from './Components/Form/Form';\nimport TodoList from './Components/TodoList/TodoList'\nimport React,{useState,useEffect} from 'react';\n\nfunction App() {\n\n  const [currentInput, setCurrentInput] = useState(\"\");\n  const [currentList, setCurrentList] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredList, setFilteredList] = useState([]);\n\n  // console.log(currentInput)\n    // console.log(currentList)\n      // console.log(status)\n\n      useEffect(()=>{\n        getList();\n      }, [])\n\n      const filterHandler = () => {\n        switch (status) {\n          case 'Completed':\n            setFilteredList(currentList.filter(item => item.completed === true))\n            break;\n          case 'Not Completed':\n            setFilteredList(currentList.filter(item => item.completed === false))\n            break;\n          default:\n            setFilteredList(currentList)\n            break;\n        }\n      }\n\n      useEffect(()=>{\n        filterHandler();\n        saveList();\n      }, [currentList, status])\n\n      const saveList = () => {\n        localStorage.setItem(\"list\", JSON.stringify(currentList));\n      }\n\n      // save to localstorage\n      const getList = () => {\n        if (localStorage.getItem(\"list\") === null ){\n          localStorage.setItem(\"list\", JSON.stringify([]));\n        }else{\n          let curList =JSON.parse( localStorage.getItem(\"list\"));\n          // console.log(curList);\n          setCurrentList(curList);\n        }\n      }\n\n  return (\n    <div className=\"App\">\n      <Form\n      currentInput={currentInput}\n      setCurrentInput={setCurrentInput}\n      currentList={currentList}\n      setCurrentList={setCurrentList}\n      setStatus={setStatus} />\n\n      <TodoList\n      currentList={currentList}\n      filteredList={filteredList}\n      setCurrentList={setCurrentList}\n      filteredList={filteredList}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}